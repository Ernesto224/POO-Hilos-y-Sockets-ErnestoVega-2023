/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Domain.ClienteSingleton;
import Domain.Solicitud;
import Domain.Usuario;
import Utility.ConexionInterfaz;
import Utility.Encriptador;
import Utility.GestionXML;
import Utility.Validacion;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jdom.Element;

/**
 *
 * @author Ernesto
 */
public class JfLoginJugador extends javax.swing.JFrame {

    private final Usuario usurioIniciando;

    /**
     * Creates new form VentanaDeInicio
     *
     * @throws java.io.IOException
     */
    public JfLoginJugador() throws IOException {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        ClienteSingleton.getInstance().start();
        this.usurioIniciando = new Usuario();
        ConexionInterfaz.setJfLoginJugador(this);
    }//constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbRegistrar = new javax.swing.JButton();
        jlNombre = new javax.swing.JLabel();
        jlContra = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jpPassword = new javax.swing.JPasswordField();
        jtNombre = new javax.swing.JTextField();
        jbIniciarSession = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Log in\n");
        setSize(new java.awt.Dimension(400, 400));

        jPanel1.setBackground(new java.awt.Color(0, 151, 153));

        jbRegistrar.setBackground(new java.awt.Color(0, 0, 0));
        jbRegistrar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jbRegistrar.setForeground(new java.awt.Color(255, 255, 0));
        jbRegistrar.setText("Registrar");
        jbRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRegistrarActionPerformed(evt);
            }
        });

        jlNombre.setBackground(new java.awt.Color(0, 0, 0));
        jlNombre.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jlNombre.setForeground(new java.awt.Color(255, 255, 0));
        jlNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlNombre.setText("Nombre de usuario");

        jlContra.setBackground(new java.awt.Color(0, 0, 0));
        jlContra.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jlContra.setForeground(new java.awt.Color(255, 255, 0));
        jlContra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlContra.setText("Contrase√±a");

        jSeparator2.setBackground(new java.awt.Color(102, 102, 102));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jpPassword.setBackground(new java.awt.Color(153, 153, 153));
        jpPassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jpPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jtNombre.setBackground(new java.awt.Color(153, 153, 153));
        jtNombre.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jtNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jbIniciarSession.setBackground(new java.awt.Color(0, 0, 0));
        jbIniciarSession.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jbIniciarSession.setForeground(new java.awt.Color(255, 255, 0));
        jbIniciarSession.setText("Iniciar Session");
        jbIniciarSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbIniciarSessionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlContra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 33, Short.MAX_VALUE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(2, 2, 2))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbIniciarSession)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlNombre)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlContra)
                    .addComponent(jpPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbIniciarSession)
                    .addComponent(jbRegistrar))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRegistrarActionPerformed
        //valida que la informacion no este vacia y que sea posible regitrar al nuevo usuario para asi agregarlo a la lista
        try {
            if (Validacion.datoValido(this.jtNombre.getText()) && Validacion.datoValido(String.valueOf(this.jpPassword.getPassword()))) {
                //coloca la informacion al usurio ejecutando
                this.usurioIniciando.setNombreUsuario(this.jtNombre.getText());
                this.usurioIniciando.setContrasenia(Encriptador.obtenerContraseniaCifrada(String.valueOf(this.jpPassword.getPassword()), Encriptador.MD5));

                //envia la solicitud al servidor
                Element solicitud = GestionXML.agregarAccionSimple(Solicitud.REGISTRAR_NUEVO.name(), GestionXML.enviarUsurio(this.usurioIniciando));
                ClienteSingleton.getInstance().enviarDatos(GestionXML.xmlToString(solicitud));
                this.restablecerEstacios();//restablece los espacios de texto
            } else {
                this.errorRegistroInicio();
            }
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(JfLoginJugador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbRegistrarActionPerformed

    private void jbIniciarSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbIniciarSessionActionPerformed
        try {
            //valida que el jugador que inicia exista para poder agregar ese jugador a la lista
            //debe complir con la contrasenia y con el nombre de usuario
            if (Validacion.datoValido(this.jtNombre.getText()) && Validacion.datoValido(String.valueOf(this.jpPassword.getPassword()))) {
                //coloca la informacion al usurio ejecutando
                this.usurioIniciando.setNombreUsuario(this.jtNombre.getText());
                this.usurioIniciando.setContrasenia(Encriptador.obtenerContraseniaCifrada(String.valueOf(this.jpPassword.getPassword()), Encriptador.MD5));

                //envia la solicitud al servidor
                Element solicitud = GestionXML.agregarAccionSimple(Solicitud.VERIFICACION_INICIO.name(), GestionXML.enviarUsurio(this.usurioIniciando));
                ClienteSingleton.getInstance().enviarDatos(GestionXML.xmlToString(solicitud));
                this.restablecerEstacios();//restablece los espacios de texto
            } else {
                this.errorRegistroInicio();
            }
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(JfLoginJugador.class.getName()).log(Level.SEVERE, null, ex);
        }//trata de registrar un nuevo usuario//trata de registrar un nuevo usuario
    }//GEN-LAST:event_jbIniciarSessionActionPerformed

    public void restablecerEstacios() {
        this.jtNombre.setText("");
        this.jpPassword.setText("");
    }//metodo para vaciar los espacios de texto

    public void iniciarInterfaz() {
        try {
            ClienteSingleton.getInstance().setUsurioSession(this.usurioIniciando);
            JFSeleccionPersonaje jFSeleccionPersonaje=new JFSeleccionPersonaje(this.usurioIniciando);
            jFSeleccionPersonaje.setVisible(true);
            this.dispose();
        }catch (IOException ex) {
            Logger.getLogger(JfLoginJugador.class.getName()).log(Level.SEVERE, null, ex);
        }
    } //metodo para desplegar la interfaz de usurio

    public void errorRegistroInicio() {
        JOptionPane.showMessageDialog(this, "Nombre o Contrase√±a invalidos ", "Error", JOptionPane.ERROR_MESSAGE);
        this.restablecerEstacios();
    }//metodo para notificar que no es posible registrar o iniciar la session

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JfLoginJugador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new JfLoginJugador().setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(JfLoginJugador.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton jbIniciarSession;
    private javax.swing.JButton jbRegistrar;
    private javax.swing.JLabel jlContra;
    private javax.swing.JLabel jlNombre;
    private javax.swing.JPasswordField jpPassword;
    private javax.swing.JTextField jtNombre;
    // End of variables declaration//GEN-END:variables
}//class 29/5/2023
